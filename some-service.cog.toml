name = "some_service"

[docker]
var = "var_value"
other_var = "other_var_value"
# docker.enc & docker.cfg indicates the division between plaintext configs and encrypted ones
[docker.enc]
var.path = "path/to/file.enc.yaml"

[qa] 
var.name = "VAR_NAME"
# traverse "path/to/qa/prefs.yaml" in yq style if file is not a flat structure looking for VAR_NAME key name:
var.path = [ "path/to/qa/prefs.yaml", "config.key" ]
# assumes config holds an associative array with a key name of VAR_NAME under "config.key"
# to grab the value from:
#
# prefs.yaml:
# config:
#   key:
#     VAR_NAME: "var_value"
#     OTHER_VAR_NAME: "other_var_value"
[qa.enc]
enc_var.name = "ENC_VAR_NAME"
enc_var.path = "path/to/qa/file.enc.yaml"

# {
#   "name": [
#     "some_service"
#   ],
#   "docker": {
#     "other_var": "other_var_value",
#     "var": "var_value",
#     "enc": {
#       "var": {
#         "path": "path/to/file.enc.yaml"
#       }
#     }
#   },
#   "qa": {
#     "enc": {
#       "enc_var": {
#         "name": "ENC_VAR_NAME",
#         "path": "path/to/qa/file.enc.yaml"
#       }
#     },
#     "var": {
#       "name": "VAR_NAME",
#       "path": [
#         "path/to/qa/prefs.yaml",
#         "config.key"
#       ]
#     }
#   }
# }
